package com.example.usedaoforgen.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.example.usedaoforgen.bean.Channel;
import com.example.usedaoforgen.bean.POSITION;

import com.example.usedaoforgen.dao.ChannelDao;
import com.example.usedaoforgen.dao.POSITIONDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig channelDaoConfig;
    private final DaoConfig pOSITIONDaoConfig;

    private final ChannelDao channelDao;
    private final POSITIONDao pOSITIONDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        channelDaoConfig = daoConfigMap.get(ChannelDao.class).clone();
        channelDaoConfig.initIdentityScope(type);

        pOSITIONDaoConfig = daoConfigMap.get(POSITIONDao.class).clone();
        pOSITIONDaoConfig.initIdentityScope(type);

        channelDao = new ChannelDao(channelDaoConfig, this);
        pOSITIONDao = new POSITIONDao(pOSITIONDaoConfig, this);

        registerDao(Channel.class, channelDao);
        registerDao(POSITION.class, pOSITIONDao);
    }
    
    public void clear() {
        channelDaoConfig.getIdentityScope().clear();
        pOSITIONDaoConfig.getIdentityScope().clear();
    }

    public ChannelDao getChannelDao() {
        return channelDao;
    }

    public POSITIONDao getPOSITIONDao() {
        return pOSITIONDao;
    }

}
